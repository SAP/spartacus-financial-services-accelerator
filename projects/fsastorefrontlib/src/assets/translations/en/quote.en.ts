export const quote = {
  quote: {
    quote: 'Quote',
    quotes: 'Quotes',
    quoteId: 'Quote ID',
    quoteReview: 'Quote Review',
    viewQuotes: 'View Quotes',
    getQuote: 'Get a Quote',
    moreInfo: 'More info',
    retrieveQuotes: 'Retrieve Quotes',
    notBoundQuoteDescription: 'Your quote/application is not bound.',
    referredQuoteDescription:
      'Your quote is referred. For more information, please contact the agent.',
    boundQuoteDescription: 'Your quote is already bound.',
    viewYourQuotes: 'View your quotes',
    youHaveNoQuotes: 'You have no Quotes or Applications',
    noActiveQuotes: 'You have no active quotes',
    getQuoteBySelecting: 'Get a Quote by selecting an insurance type above',
    expiryDate: 'Expiry date',
    confirmInformation: 'Confirm Information',
    bindingConfirmation:
      'By clicking Continue I certify the information in this application is true and correct.',
    quoteWorkflowStatus: {
      title: 'Quote status',
      REFERRED: 'Referred',
      APPROVED: 'Approved',
      REJECTED: 'Rejected',
      PENDING: 'Pending',
      SUBMITTED: 'Submitted',
      ERROR: 'Error',
      na: 'N/A',
    },
    quoteSummary: 'Quote Summary',
    category: 'Category',
    selectCategory: 'Select category',
    compareQuotes: 'Compare quotes',
    renewalQuotes: 'Renewal Quotes',
    compare: 'Compare',
    select: 'Select/Deselect',
    successfulSelection: 'User successfully selected {{ category }} cards.',
    compareInfo: 'Select two quotes with the same category for comparison',
    renewalInfo: 'This quote is created from existing policy',
    renewalQuoteInfo: 'Renewal Quote',
    clearAll: 'Clear all',
    allQuotes: 'All quotes',
    quotesComparison: 'Compare {{ category }} Quotes',
    quoteNo: 'Quote No.',
    selectQuote: 'Select Quote',
    quoteBillingEvents: 'Quote Billing Events',
    quoteOptionalExtras: 'Quote Optional Extras',
    billingEvents: 'Billing Events',
    quoteGeneralInformation: 'Quote General Information',
    generalInformation: 'General Information',
    noQuotes: 'No quotes for comparison',
    transferCartSuccess:
      'Insurance Quote/Application is successfully prepared for the customer {{ customer }}.',
    totalPrice: 'Total Price',
    details: {
      insurances_travel: {
        trip: 'Travel Information',
        tripDestination: 'Destination',
        Travellers: 'Number of Travelers',
        tripStartDate: 'Start Date',
        traveller: `Traveler\'s Name`,
        costOfTrip: 'Cost of Trip',
        NoOfDays: 'Number of Days',
        tripDetailsTravellerAges: 'Main traveler age',
        tripDetailsTravellerAges2: 'Additional traveler age',
      },
      insurances_savings: {
        contribution: 'Contribution',
        annualContributionIncrease: 'Annual Contribution Increase',
        contributionFrequency: 'Contribution Frequency',
        retirementAge: 'Retirement Age',
        name: 'Name',
      },
      insurances_event: {
        event: 'Event Information',
        venue: 'Venue Name',
        address: 'Venue Address',
        city: 'Venue City',
        country: 'Event Country',
      },
      insurances_life: {
        lifeWhoCovered: 'Insured Person',
        lifeCoverageRequire: 'Coverage Amount',
        lifeCoverageLast: 'Coverage Period',
        lifeCoverageStartDate: 'Start Date',
        lifeMainDob: 'Date of Birth',
        lifeSecondDob: 'Date of Birth - second person',
        name: 'Name',
      },
      insurances_auto: {
        auto: 'Vehicle',
        vehicleMake: 'Vehicle Make',
        vehicleModel: 'Vehicle Model',
        vehicleType: 'Vehicle Type',
        vehicleYear: 'Vehicle Year',
        vehicleValue: 'Vehicle Value',
        vehicleIdentificationNumber: 'Vehicle Identification Number',
        vehicleLicenseNumber: 'Vehicle License Number ',
        vehiclePurchaseDate: 'Vehicle Purchase Date',
        vehicleAnnualMileage: 'Vehicle Annual Mileage',
        vehicleOwnerPostalCode: 'Vehicle Owner Postal Code',
        firstName: 'First Name',
        lastName: 'Last Name',
        driverCategory: 'Driver Category',
        dateOfBirth: 'Date of Birth',
        driverLicenceDate: 'Driver License Date',
        driverLicenceNumber: 'Driver License Number',
      },
      insurances_property_homeowners: {
        property: 'Property Information',
        'property-address-line-1': 'Property Address',
        propertyDetailsCoverRequired: 'Cover Required',
        propertyType: 'Property Type',
        propertyValue: 'Property Value',
      },
      insurances_property_renters: {
        property: 'Property Information',
        'property-address-line-1': 'Property Address',
        propertyDetailsCoverRequired: 'Cover Required',
        propertyType: 'Property Type',
        propertyValue: 'Property Value',
      },
    },
  },
};
